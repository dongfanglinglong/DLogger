apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

// load properties
Properties properties = new Properties()
File localPropertiesFile = project.file("local.properties");
if (localPropertiesFile.exists()) {
    properties.load(localPropertiesFile.newDataInputStream())
}
File projectPropertiesFile = project.file("project.properties");
if (projectPropertiesFile.exists()) {
    properties.load(projectPropertiesFile.newDataInputStream())
}

// read properties
def projectName = properties.getProperty("project.name")
println "projectName[" + projectName + "]"
def projectGroupId = properties.getProperty("project.groupId")
println "projectGroupId[" + projectGroupId + "]"
def projectArtifactId = properties.getProperty("project.artifactId")
println "projectArtifactId[" + projectArtifactId + "]"
def projectVersionName = android.defaultConfig.versionName
println "projectVersionName[" + projectVersionName + "]"
def projectPackaging = properties.getProperty("project.packaging")
println "projectPackaging[" + projectPackaging + "]"
def projectSiteUrl = properties.getProperty("project.siteUrl")
println "projectSiteUrl[" + projectSiteUrl + "]"
def projectGitUrl = properties.getProperty("project.gitUrl")
println "projectGitUrl[" + projectGitUrl + "]"
def developerId = properties.getProperty("developer.id")
println "developerId[" + developerId + "]"
def developerName = properties.getProperty("developer.name")
println "developerName[" + developerName + "]"
def developerEmail = properties.getProperty("developer.email")
println "developerEmail[" + developerEmail + "]"
def bintrayUser = properties.getProperty("bintray.user")
println "bintrayUser[" + bintrayUser + "]"
def bintrayApikey = properties.getProperty("bintray.apikey")
println "bintrayApikey[" + bintrayApikey + "]"

def javadocName = projectName + " " + projectVersionName
println "javadocName[" + javadocName + "]"

group = projectGroupId
println "group[" + group + "]"

// This generates POM.xml with proper parameters
install {
    repositories.mavenInstaller {
        pom {
            project {
                name projectName
                groupId projectGroupId
                artifactId projectArtifactId
                version projectVersionName
                packaging projectPackaging
                url projectSiteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection projectGitUrl
                    developerConnection projectGitUrl
                    url projectSiteUrl
                }
            }
        }
    }
}

// This generates sources.jar
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

// This generates javadoc.jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// javadoc configuration
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version projectVersionName
        links "http://docs.oracle.com/javase/8/docs/api"
        title javadocName
    }
}

// bintray configuration
bintray {
    user = bintrayUser
    key = bintrayApikey
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = projectName
        websiteUrl = projectSiteUrl
        vcsUrl = projectGitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}